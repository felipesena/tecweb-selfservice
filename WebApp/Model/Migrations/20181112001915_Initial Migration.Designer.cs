// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Model;

namespace WebApp.Model.Migrations
{
    [DbContext(typeof(AplicacaoDbContext))]
    [Migration("20181112001915_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp.Model.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("WebApp.Model.Comida", b =>
                {
                    b.Property<int>("ComidaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId");

                    b.Property<string>("Descricao");

                    b.Property<int>("QuantidadeBase");

                    b.Property<double?>("QuantidadeCalorias");

                    b.Property<double?>("QuantidadeCarboidrato");

                    b.Property<double?>("QuantidadeFerro");

                    b.Property<double?>("QuantidadeFibra");

                    b.Property<double?>("QuantidadeFosforo");

                    b.Property<double?>("QuantidadeLipidio");

                    b.Property<double?>("QuantidadePotassio");

                    b.Property<double?>("QuantidadeProteina");

                    b.Property<double?>("QuantidadeSodio");

                    b.Property<double?>("QuantidadeZinco");

                    b.Property<string>("Unidade");

                    b.Property<string>("UnidadeCarboidrato");

                    b.Property<string>("UnidadeFerro");

                    b.Property<string>("UnidadeFibra");

                    b.Property<string>("UnidadeFosforo");

                    b.Property<string>("UnidadeLipidio");

                    b.Property<string>("UnidadePotassio");

                    b.Property<string>("UnidadeProteina");

                    b.Property<string>("UnidadeSodio");

                    b.Property<string>("UnidadeZinco");

                    b.HasKey("ComidaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Comidas");
                });

            modelBuilder.Entity("WebApp.Model.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Perfil")
                        .IsRequired();

                    b.Property<string>("Provedor");

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebApp.Model.Comida", b =>
                {
                    b.HasOne("WebApp.Model.Categoria", "Categoria")
                        .WithMany("Comidas")
                        .HasForeignKey("CategoriaId");
                });
#pragma warning restore 612, 618
        }
    }
}
